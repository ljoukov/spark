options:
  logging: CLOUD_LOGGING_ONLY
  dynamicSubstitutions: true
substitutions:
  _SERVICE_NAME: spark
  _REGION: us-central1
  _PROJECT_ID: pic2toon
  _AR_REPO: pic2toon-docker-repo
  _IMAGE_NAME: ${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_AR_REPO}/${_SERVICE_NAME}-image:tag1
steps:
  - name: python:slim
    entrypoint: echo
    args: ['hello world']
  - name: python:slim
    entrypoint: python
    args: ['web/write_dotenv.py']
    secretEnv: ['DOTENV']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -lc
      - |
        set -euo pipefail
        gcloud config set project ${_PROJECT_ID}
        gcloud services enable artifactregistry.googleapis.com run.googleapis.com --quiet || true
        if ! gcloud artifacts repositories describe "${_AR_REPO}" --location="${_REGION}" >/dev/null 2>&1; then
          gcloud artifacts repositories create "${_AR_REPO}" \
            --repository-format=docker \
            --location="${_REGION}" \
            --description="Docker repo for ${_PROJECT_ID}" \
            --quiet
        fi
        PROJECT_NUMBER=$(gcloud projects describe ${_PROJECT_ID} --format='value(projectNumber)')
        CLOUD_BUILD_SA="${PROJECT_NUMBER}@cloudbuild.gserviceaccount.com"
        gcloud artifacts repositories add-iam-policy-binding "${_AR_REPO}" \
          --location="${_REGION}" \
          --member="serviceAccount:${CLOUD_BUILD_SA}" \
          --role="roles/artifactregistry.writer" \
          --quiet || true
        gcloud projects add-iam-policy-binding "${_PROJECT_ID}" \
          --member="serviceAccount:${CLOUD_BUILD_SA}" \
          --role="roles/run.admin" \
          --quiet || true
        gcloud projects add-iam-policy-binding "${_PROJECT_ID}" \
          --member="serviceAccount:${CLOUD_BUILD_SA}" \
          --role="roles/iam.serviceAccountUser" \
          --quiet || true
  - name: 'gcr.io/cloud-builders/docker'
    script: |
      # Build from the monorepo root so workspaces under packages/* are available
      docker build -t ${_IMAGE_NAME} -f web/Dockerfile .
    automapSubstitutions: true
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_IMAGE_NAME']
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      [
        'run',
        'deploy',
        '$_SERVICE_NAME',
        '--image',
        '$_IMAGE_NAME',
        '--region',
        '$_REGION',
        '--timeout',
        '20m'
      ]
images:
  - ${_IMAGE_NAME}
availableSecrets:
  secretManager:
    - versionName: projects/1083072308192/secrets/env-prod/versions/latest
      env: 'DOTENV'
